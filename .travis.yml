dist: xenial
language: php

jobs:
  fast_finish: true
  include:
   - php: 5.2
     dist: precise
   - php: 5.3
     dist: precise
   - php: 5.4
     dist: trusty

cache:
  directories:
    - $HOME/.cache/pip
    # Cache directory for older Composer versions.
    - $HOME/.composer/cache/files
    # Cache directory for more recent Composer versions.
    - $HOME/.cache/composer/files

install:
 # Speed up build time by disabling Xdebug.
 # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
 # https://twitter.com/kelunik/status/954242454676475904
 - phpenv config-rm xdebug.ini || echo 'No xdebug config.'

 # Setup the test server
 - phpenv local $( phpenv versions | grep 5.6 | tail -1 )
 # The PHPCS and lint dependencies require PHP 5.3, so would block install on PHP < 5.3.
 # As they are only needed for code sniffing, remove them.
 # Also remove PHPUnit as we'll be using the Phar provided by Travis.
 - travis_retry composer remove --dev --no-update phpunit/phpunit squizlabs/php_codesniffer phpcompatibility/php-compatibility wp-coding-standards/wpcs dealerdirect/phpcodesniffer-composer-installer php-parallel-lint/php-parallel-lint php-parallel-lint/php-console-highlighter
 - travis_retry composer install --no-interaction
 - TESTPHPBIN=$(phpenv which php)
 - phpenv local --unset

 # Setup the proxy
 - wget -O /tmp/mitmproxy-0.18.2-linux.tar.gz https://snapshots.mitmproxy.org/0.18.2/mitmproxy-0.18.2-linux.tar.gz
 - tar -xzf /tmp/mitmproxy-0.18.2-linux.tar.gz --directory /tmp

before_script:
 - PHPBIN=$TESTPHPBIN PORT=8080 vendor/bin/start.sh
 - export REQUESTS_TEST_HOST_HTTP="localhost:8080"

 - PROXYBIN="/tmp/mitmdump" PORT=9002 tests/utils/proxy/start-travis.sh
 - PROXYBIN="/tmp/mitmdump" PORT=9003 AUTH="test:pass" tests/utils/proxy/start-travis.sh
 - export REQUESTS_HTTP_PROXY="localhost:9002"
 - export REQUESTS_HTTP_PROXY_AUTH="localhost:9003"
 - export REQUESTS_HTTP_PROXY_AUTH_USER="test"
 - export REQUESTS_HTTP_PROXY_AUTH_PASS="pass"

 # Ensure the HTTPS test instance on Heroku is spun up
 - curl -s -I http://requests-php-tests.herokuapp.com/ > /dev/null

 # Environment checks
 - phpunit --version

script:
 # Lint PHP files against parse errors for PHP 5.2 - 5.4.
 - |
   if [ ${TRAVIS_PHP_VERSION:0:3} == "5.2" ]; then
     if find $(pwd)/ -path $(pwd)/vendor -prune -o -path $(pwd)/ examples/cookie_jar.php -prune -o -path $(pwd)/tests/phpunit6-compat.php -prune -o -name "*.php" -exec php -l {} \; | grep "^[Parse error|Fatal error]"; then exit 1; fi
   elif [ ${TRAVIS_PHP_VERSION:0:3} == "5.3" ]; then
     if find $(pwd)/ -path $(pwd)/vendor -prune -o -path $(pwd)/ examples/cookie_jar.php -prune -o -name "*.php" -exec php -l {} \; | grep "^[Parse error|Fatal error]"; then exit 1; fi
   elif [ ${TRAVIS_PHP_VERSION:0:3} == "5.4" ]; then
     if find $(pwd)/ -path $(pwd)/vendor -prune -o -name "*.php" -exec php -l {} \; | grep "^[Parse error|Fatal error]"; then exit 1; fi
   fi

 # Run the unit tests.
 - |
   # PHPUnit 4.x does not yet support the `no-coverage` flag.
   if [ ${TRAVIS_PHP_VERSION:0:3} == "5.2" ]; then
     phpunit
   else
     phpunit --no-coverage
   fi

after_script:
 - tests/utils/proxy/stop.sh
 - PATH=$PATH vendor/bin/stop.sh
